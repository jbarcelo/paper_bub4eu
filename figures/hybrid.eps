%!PS-Adobe-3.0 EPSF-3.0
%%Title: hybrid.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5d
%%CreationDate: Fri Jun 15 15:08:59 2012
%%BoundingBox: 0 0 632 561
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.255 0.271 0.255 srgb} bind def
/col33 {0.502 0.502 0.502 srgb} bind def
/col34 {0.753 0.753 0.753 srgb} bind def
/col35 {0.518 0.510 0.518 srgb} bind def
/col36 {0.776 0.765 0.776 srgb} bind def
/col37 {0.906 0.890 0.906 srgb} bind def
/col38 {0.549 0.557 0.549 srgb} bind def
/col39 {0.549 0.557 0.549 srgb} bind def
/col40 {0.549 0.557 0.549 srgb} bind def
/col41 {0.290 0.271 0.290 srgb} bind def
/col42 {0.518 0.525 0.518 srgb} bind def
/col43 {0.776 0.780 0.776 srgb} bind def
/col44 {0.906 0.906 0.906 srgb} bind def
/col45 {0.969 0.969 0.969 srgb} bind def
/col46 {0.612 0.620 0.612 srgb} bind def
/col47 {0.451 0.459 0.451 srgb} bind def
/col48 {0.259 0.271 0.259 srgb} bind def
/col49 {0.259 0.255 0.259 srgb} bind def
/col50 {0.937 0.984 1.000 srgb} bind def
/col51 {0.678 0.667 0.678 srgb} bind def
/col52 {0.290 0.271 0.290 srgb} bind def
/col53 {0.678 0.667 0.678 srgb} bind def
/col54 {0.353 0.333 0.353 srgb} bind def
/col55 {0.741 0.765 0.741 srgb} bind def
/col56 {0.871 0.890 0.871 srgb} bind def
/col57 {0.290 0.271 0.290 srgb} bind def
/col58 {0.388 0.396 0.388 srgb} bind def
/col59 {0.290 0.271 0.290 srgb} bind def
/col60 {0.518 0.510 0.518 srgb} bind def
/col61 {0.741 0.765 0.741 srgb} bind def
/col62 {0.871 0.890 0.871 srgb} bind def
/col63 {0.741 0.765 0.741 srgb} bind def
/col64 {0.871 0.890 0.871 srgb} bind def
/col65 {0.518 0.510 0.518 srgb} bind def
/col66 {0.741 0.765 0.741 srgb} bind def
/col67 {0.871 0.890 0.871 srgb} bind def
/col68 {0.549 0.557 0.549 srgb} bind def
/col69 {0.549 0.557 0.549 srgb} bind def
/col70 {0.290 0.271 0.290 srgb} bind def
/col71 {0.678 0.667 0.678 srgb} bind def
/col72 {0.290 0.271 0.290 srgb} bind def
/col73 {0.678 0.667 0.678 srgb} bind def
/col74 {0.353 0.333 0.353 srgb} bind def
/col75 {0.741 0.765 0.741 srgb} bind def
/col76 {0.871 0.890 0.871 srgb} bind def
/col77 {0.290 0.271 0.290 srgb} bind def
/col78 {0.388 0.396 0.388 srgb} bind def
/col79 {0.290 0.271 0.290 srgb} bind def
/col80 {0.518 0.510 0.518 srgb} bind def
/col81 {0.741 0.765 0.741 srgb} bind def
/col82 {0.871 0.890 0.871 srgb} bind def
/col83 {0.741 0.765 0.741 srgb} bind def
/col84 {0.871 0.890 0.871 srgb} bind def
/col85 {0.871 0.890 0.937 srgb} bind def
/col86 {0.580 0.588 0.612 srgb} bind def
/col87 {0.839 0.859 0.839 srgb} bind def
/col88 {0.612 0.635 0.710 srgb} bind def
/col89 {0.612 0.000 0.000 srgb} bind def
/col90 {0.937 0.937 0.937 srgb} bind def
/col91 {0.871 0.890 0.871 srgb} bind def
/col92 {0.518 0.682 1.000 srgb} bind def
/col93 {0.451 0.443 1.000 srgb} bind def
/col94 {0.776 0.714 0.580 srgb} bind def
/col95 {0.937 0.984 1.000 srgb} bind def
/col96 {0.871 0.796 0.647 srgb} bind def
/col97 {0.259 0.255 0.259 srgb} bind def
/col98 {0.518 0.510 0.518 srgb} bind def
/col99 {0.741 0.765 0.741 srgb} bind def
/col100 {0.871 0.890 0.871 srgb} bind def
/col101 {0.549 0.557 0.549 srgb} bind def
/col102 {0.678 0.667 0.678 srgb} bind def
/col103 {0.353 0.333 0.353 srgb} bind def
/col104 {0.259 0.255 0.259 srgb} bind def
/col105 {0.518 0.510 0.518 srgb} bind def
/col106 {0.741 0.765 0.741 srgb} bind def
/col107 {0.518 0.510 0.518 srgb} bind def
/col108 {0.741 0.765 0.741 srgb} bind def
/col109 {0.871 0.890 0.871 srgb} bind def
/col110 {0.549 0.557 0.549 srgb} bind def
/col111 {0.549 0.557 0.549 srgb} bind def
/col112 {0.259 0.255 0.259 srgb} bind def
/col113 {0.518 0.510 0.518 srgb} bind def
/col114 {0.741 0.765 0.741 srgb} bind def
/col115 {0.871 0.890 0.871 srgb} bind def
/col116 {0.259 0.255 0.259 srgb} bind def
/col117 {0.518 0.510 0.518 srgb} bind def
/col118 {0.741 0.765 0.741 srgb} bind def
/col119 {0.871 0.890 0.871 srgb} bind def
/col120 {0.518 0.510 0.518 srgb} bind def
/col121 {0.741 0.765 0.741 srgb} bind def
/col122 {0.871 0.890 0.871 srgb} bind def
/col123 {0.776 0.714 0.580 srgb} bind def
/col124 {0.937 0.984 1.000 srgb} bind def
/col125 {0.871 0.796 0.647 srgb} bind def
/col126 {0.776 0.714 0.580 srgb} bind def
/col127 {0.937 0.984 1.000 srgb} bind def
/col128 {0.871 0.796 0.647 srgb} bind def
/col129 {0.678 0.667 0.678 srgb} bind def
/col130 {0.353 0.333 0.353 srgb} bind def
/col131 {0.549 0.557 0.549 srgb} bind def
/col132 {0.259 0.255 0.259 srgb} bind def
/col133 {0.518 0.510 0.518 srgb} bind def
/col134 {0.741 0.765 0.741 srgb} bind def
/col135 {0.871 0.890 0.871 srgb} bind def
/col136 {0.259 0.255 0.259 srgb} bind def
/col137 {0.518 0.510 0.518 srgb} bind def
/col138 {0.741 0.765 0.741 srgb} bind def
/col139 {0.871 0.890 0.871 srgb} bind def
/col140 {0.518 0.510 0.518 srgb} bind def
/col141 {0.741 0.765 0.741 srgb} bind def
/col142 {0.871 0.890 0.871 srgb} bind def
/col143 {0.259 0.255 0.259 srgb} bind def
/col144 {0.518 0.510 0.518 srgb} bind def
/col145 {0.741 0.765 0.741 srgb} bind def
/col146 {0.259 0.255 0.259 srgb} bind def
/col147 {0.741 0.765 0.741 srgb} bind def
/col148 {0.871 0.890 0.871 srgb} bind def
/col149 {0.259 0.255 0.259 srgb} bind def
/col150 {0.518 0.510 0.518 srgb} bind def
/col151 {0.741 0.765 0.741 srgb} bind def
/col152 {0.549 0.557 0.549 srgb} bind def
/col153 {0.259 0.255 0.259 srgb} bind def
/col154 {0.518 0.510 0.518 srgb} bind def
/col155 {0.741 0.765 0.741 srgb} bind def
/col156 {0.871 0.890 0.871 srgb} bind def
/col157 {0.259 0.255 0.259 srgb} bind def
/col158 {0.518 0.510 0.518 srgb} bind def
/col159 {0.741 0.765 0.741 srgb} bind def
/col160 {0.871 0.890 0.871 srgb} bind def
/col161 {0.741 0.745 0.741 srgb} bind def
/col162 {0.322 0.318 0.322 srgb} bind def
/col163 {0.000 0.000 0.290 srgb} bind def
/col164 {0.482 0.475 0.482 srgb} bind def
/col165 {0.192 0.204 0.192 srgb} bind def
/col166 {0.259 0.255 0.259 srgb} bind def
/col167 {0.518 0.510 0.518 srgb} bind def
/col168 {0.741 0.765 0.741 srgb} bind def
/col169 {0.871 0.890 0.871 srgb} bind def
/col170 {0.000 0.000 0.482 srgb} bind def
/col171 {1.000 0.510 0.000 srgb} bind def
/col172 {0.000 0.490 0.000 srgb} bind def
/col173 {0.000 0.000 0.741 srgb} bind def
/col174 {0.259 0.255 0.259 srgb} bind def
/col175 {0.518 0.510 0.518 srgb} bind def
/col176 {0.741 0.765 0.741 srgb} bind def
/col177 {0.871 0.890 0.871 srgb} bind def
/col178 {0.518 0.510 0.518 srgb} bind def
/col179 {0.741 0.765 0.741 srgb} bind def
/col180 {0.871 0.890 0.871 srgb} bind def
/col181 {0.290 0.271 0.290 srgb} bind def
/col182 {0.290 0.271 0.290 srgb} bind def
/col183 {0.549 0.557 0.549 srgb} bind def
/col184 {0.808 0.812 0.808 srgb} bind def
/col185 {0.808 0.812 0.808 srgb} bind def
/col186 {0.808 0.812 0.808 srgb} bind def
/col187 {0.808 0.812 0.808 srgb} bind def
/col188 {0.808 0.812 0.808 srgb} bind def
/col189 {0.808 0.812 0.808 srgb} bind def
/col190 {0.808 0.812 0.808 srgb} bind def
/col191 {0.808 0.812 0.808 srgb} bind def
/col192 {0.808 0.812 0.808 srgb} bind def
/col193 {0.808 0.812 0.808 srgb} bind def
/col194 {0.808 0.812 0.808 srgb} bind def
/col195 {0.808 0.812 0.808 srgb} bind def
/col196 {0.808 0.812 0.808 srgb} bind def
/col197 {0.808 0.812 0.808 srgb} bind def
/col198 {0.808 0.812 0.808 srgb} bind def
/col199 {0.808 0.812 0.808 srgb} bind def
/col200 {0.808 0.812 0.808 srgb} bind def
/col201 {0.808 0.812 0.808 srgb} bind def
/col202 {0.808 0.812 0.808 srgb} bind def
/col203 {0.808 0.812 0.808 srgb} bind def
/col204 {0.808 0.812 0.808 srgb} bind def
/col205 {0.808 0.812 0.808 srgb} bind def
/col206 {0.808 0.812 0.808 srgb} bind def
/col207 {0.808 0.812 0.808 srgb} bind def
/col208 {0.808 0.812 0.808 srgb} bind def
/col209 {0.808 0.812 0.808 srgb} bind def
/col210 {0.808 0.812 0.808 srgb} bind def
/col211 {0.808 0.812 0.808 srgb} bind def
/col212 {0.808 0.812 0.808 srgb} bind def
/col213 {0.808 0.812 0.808 srgb} bind def
/col214 {0.808 0.812 0.808 srgb} bind def
/col215 {0.808 0.812 0.808 srgb} bind def
/col216 {0.808 0.812 0.808 srgb} bind def
/col217 {0.808 0.812 0.808 srgb} bind def
/col218 {0.808 0.812 0.808 srgb} bind def
/col219 {0.808 0.812 0.808 srgb} bind def
/col220 {0.808 0.812 0.808 srgb} bind def
/col221 {0.808 0.812 0.808 srgb} bind def
/col222 {0.808 0.812 0.808 srgb} bind def
/col223 {0.808 0.812 0.808 srgb} bind def
/col224 {0.808 0.812 0.808 srgb} bind def
/col225 {0.808 0.812 0.808 srgb} bind def
/col226 {1.000 0.953 0.808 srgb} bind def
/col227 {1.000 0.906 0.678 srgb} bind def
/col228 {1.000 0.906 0.678 srgb} bind def
/col229 {1.000 0.953 0.808 srgb} bind def
/col230 {1.000 0.827 0.482 srgb} bind def
/col231 {0.808 0.812 0.808 srgb} bind def
/col232 {0.612 0.604 0.612 srgb} bind def
/col233 {0.808 0.812 0.808 srgb} bind def
/col234 {0.612 0.604 0.612 srgb} bind def
/col235 {0.678 0.698 0.678 srgb} bind def

end

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<8020004010002008001004000802000401000200
	8001004000802000401080200040100020080010
	0400080200040100020080010040008020004010>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 561 moveto 0 0 lineto 632 0 lineto 632 561 lineto closepath clip newpath
10.1 584.9 translate
1 -1 scale
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 65
% Arc
7.500 slw
0 slc
n -10.7 2450.8 142.2 90.1257 -90.1243 arc
gs col0 s gr

% Arc
n 60.8 2665.1 101.7 -134.8507 44.8488 arcn
gs col0 s gr

% Arc
n 132.2 2165.1 201.6 135.2512 -45.0501 arc
gs col0 s gr

% Arc
n 346.5 1968.6 89.2 143.2503 37.1373 arc
gs col0 s gr

% Arc
n 632.2 2093.6 226.9 -161.5950 -18.5254 arc
gs col0 s gr

% Arc
n 1418.1 2022.2 143.1 -179.9247 -0.0759 arc
gs col0 s gr

% Arc
n 1668.1 2165.1 179.3 -127.0738 127.2914 arc
gs col0 s gr

% Arc
n 1382.3 2522.2 279.1 -50.4655 129.9979 arc
gs col0 s gr

% Arc
n 1096.6 2772.3 112.4 -18.8277 -161.3657 arc
gs col0 s gr

% Arc
n 775.1 2808.0 225.7 -18.6056 161.7350 arc
gs col0 s gr

% Arc
n 989.4 1915.0 178.9 143.2862 36.8821 arc
gs col0 s gr

% Arc
n 1203.8 2022.2 71.8 -179.8499 -0.1512 arc
gs col0 s gr

% Arc
n 453.7 2843.7 113.7 -161.1667 18.3539 arcn
gs col0 s gr

% Arc
n 206.9 2869.7 153.2 -119.2496 -24.2580 arcn
gs col0 s gr

% here ends figure;
% 
% here starts figure with depth 50
% Polyline
0 slj
0 slc
7.500 slw
n 8550 2925 m 9180 2475 l
 9855 2925 l gs col0 s gr 
% Polyline
n 8775 2790 m 8775 3375 l 9675 3375 l
 9675 2835 l gs col0 s gr 
% Polyline
n 9000 3375 m 9000 2925 l 9225 2925 l
 9225 3375 l gs col0 s gr 
% Polyline
n 9315 2835 m 9585 2835 l 9585 3150 l 9315 3150 l
 cp gs col0 s gr 
% Polyline
n 8550 4050 m 9180 3600 l
 9855 4050 l gs col0 s gr 
% Polyline
n 8775 3915 m 8775 4500 l 9675 4500 l
 9675 3960 l gs col0 s gr 
% Polyline
n 9000 4500 m 9000 4050 l 9225 4050 l
 9225 4500 l gs col0 s gr 
% Polyline
n 9315 3960 m 9585 3960 l 9585 4275 l 9315 4275 l
 cp gs col0 s gr 
% Polyline
n 6660 8370 m 7290 7920 l
 7965 8370 l gs col0 s gr 
% Polyline
n 6885 8235 m 6885 8820 l 7785 8820 l
 7785 8280 l gs col0 s gr 
% Polyline
n 7110 8820 m 7110 8370 l 7335 8370 l
 7335 8820 l gs col0 s gr 
% Polyline
n 7425 8280 m 7695 8280 l 7695 8595 l 7425 8595 l
 cp gs col0 s gr 
% Polyline
n 1170 8640 m 1800 8190 l
 2475 8640 l gs col0 s gr 
% Polyline
n 1395 8505 m 1395 9090 l 2295 9090 l
 2295 8550 l gs col0 s gr 
% Polyline
n 1620 9090 m 1620 8640 l 1845 8640 l
 1845 9090 l gs col0 s gr 
% Polyline
n 1935 8550 m 2205 8550 l 2205 8865 l 1935 8865 l
 cp gs col0 s gr 
% Polyline
n 810 6210 m 1440 5760 l
 2115 6210 l gs col0 s gr 
% Polyline
n 1035 6075 m 1035 6660 l 1935 6660 l
 1935 6120 l gs col0 s gr 
% Polyline
n 1260 6660 m 1260 6210 l 1485 6210 l
 1485 6660 l gs col0 s gr 
% Polyline
n 1575 6120 m 1845 6120 l 1845 6435 l 1575 6435 l
 cp gs col0 s gr 
% Polyline
n 2475 1710 m 3105 1260 l
 3780 1710 l gs col0 s gr 
% Polyline
n 2700 1575 m 2700 2160 l 3600 2160 l
 3600 1620 l gs col0 s gr 
% Polyline
n 2925 2160 m 2925 1710 l 3150 1710 l
 3150 2160 l gs col0 s gr 
% Polyline
n 3240 1620 m 3510 1620 l 3510 1935 l 3240 1935 l
 cp gs col0 s gr 
% Polyline
n 4230 855 m 4860 405 l
 5535 855 l gs col0 s gr 
% Polyline
n 4455 720 m 4455 1305 l 5355 1305 l
 5355 765 l gs col0 s gr 
% Polyline
n 4680 1305 m 4680 855 l 4905 855 l
 4905 1305 l gs col0 s gr 
% Polyline
n 4995 765 m 5265 765 l 5265 1080 l 4995 1080 l
 cp gs col0 s gr 
% Polyline
n 5850 1710 m 6480 1260 l
 7155 1710 l gs col0 s gr 
% Polyline
n 6075 1575 m 6075 2160 l 6975 2160 l
 6975 1620 l gs col0 s gr 
% Polyline
n 6300 2160 m 6300 1710 l 6525 1710 l
 6525 2160 l gs col0 s gr 
% Polyline
n 6615 1620 m 6885 1620 l 6885 1935 l 6615 1935 l
 cp gs col0 s gr 
% Polyline
n 8550 5175 m 9180 4725 l
 9855 5175 l gs col0 s gr 
% Polyline
n 8775 5040 m 8775 5625 l 9675 5625 l
 9675 5085 l gs col0 s gr 
% Polyline
n 9000 5625 m 9000 5175 l 9225 5175 l
 9225 5625 l gs col0 s gr 
% Polyline
n 9315 5085 m 9585 5085 l 9585 5400 l 9315 5400 l
 cp gs col0 s gr 
% Ellipse
n 2745 2160 225 225 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 168.00 129.00] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 2745 6345 225 225 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 168.00 408.00] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 4050 3825 225 225 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 255.00 240.00] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 4725 2610 225 225 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 300.00 159.00] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 4725 7312 112 112 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5737 6750 113 113 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5850 7312 113 113 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6525 7087 113 113 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 7312 6750 113 113 0 360 DrawEllipse gs col0 s gr

% Polyline
n 4155 3150 m 4050 3150 4050 5745 105 arcto 4 {pop} repeat
  4050 5850 8220 5850 105 arcto 4 {pop} repeat
  8325 5850 8325 3255 105 arcto 4 {pop} repeat
  8325 3150 4155 3150 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 4605 6300 m 4500 6300 4500 6645 105 arcto 4 {pop} repeat
  4500 6750 4845 6750 105 arcto 4 {pop} repeat
  4950 6750 4950 6405 105 arcto 4 {pop} repeat
  4950 6300 4605 6300 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 5730 7650 m 5625 7650 5625 7995 105 arcto 4 {pop} repeat
  5625 8100 5970 8100 105 arcto 4 {pop} repeat
  6075 8100 6075 7755 105 arcto 4 {pop} repeat
  6075 7650 5730 7650 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 3480 8325 m 3375 8325 3375 8670 105 arcto 4 {pop} repeat
  3375 8775 3720 8775 105 arcto 4 {pop} repeat
  3825 8775 3825 8430 105 arcto 4 {pop} repeat
  3825 8325 3480 8325 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 2580 6525 m 2475 6525 2475 6870 105 arcto 4 {pop} repeat
  2475 6975 2820 6975 105 arcto 4 {pop} repeat
  2925 6975 2925 6630 105 arcto 4 {pop} repeat
  2925 6525 2580 6525 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2700 6975 m
 3600 8325 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3600 8325 m
 5625 7875 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5625 7875 m
 4680 6705 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2925 6750 m
 4500 6525 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3600 8325 m
 4680 6750 l gs col0 s gr  [] 0 sd
% Polyline
n 4725 6300 m
 4725 5850 l gs col0 s gr 
% Polyline
n 4830 2250 m 4725 2250 4725 2595 105 arcto 4 {pop} repeat
  4725 2700 5070 2700 105 arcto 4 {pop} repeat
  5175 2700 5175 2355 105 arcto 4 {pop} repeat
  5175 2250 4830 2250 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 4950 2700 m
 4950 3150 l gs col0 s gr 
% Polyline
 [60] 0 sd
n 4725 2475 m
 3780 1980 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 4950 2250 m
 4950 1530 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5175 2475 m
 5850 2070 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2475 6750 m
 2025 6435 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3375 8550 m
 2610 8820 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6075 7830 m
 6660 8100 l gs col0 s gr  [] 0 sd
% Polyline
n 8820 3375 m
 8325 3375 l gs col0 s gr 
% Polyline
n 8820 4500 m
 8325 4500 l gs col0 s gr 
% Polyline
n 8820 5625 m
 8325 5625 l gs col0 s gr 
% Polyline
 [60] 0 sd
n 4725 7200 m
 4725 6750 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5715 6885 m
 5760 7200 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6390 7155 m
 5985 7245 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 7200 6795 m
 6615 7020 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5850 7425 m
 5805 7650 l gs col0 s gr  [] 0 sd
% Polyline
2 slj
 [15 45] 45 sd
n 2655 6120 m 2655 6118 l 2655 6114 l 2655 6107 l 2655 6095 l 2654 6078 l
 2654 6056 l 2653 6028 l 2652 5993 l 2651 5953 l 2650 5906 l
 2648 5855 l 2646 5798 l 2644 5737 l 2642 5673 l 2639 5606 l
 2637 5537 l 2633 5467 l 2630 5397 l 2627 5326 l 2623 5257 l
 2619 5188 l 2614 5122 l 2610 5057 l 2605 4994 l 2600 4933 l
 2594 4874 l 2589 4818 l 2583 4764 l 2577 4712 l 2570 4662 l
 2563 4614 l 2556 4568 l 2548 4524 l 2540 4481 l 2531 4439 l
 2522 4398 l 2512 4359 l 2502 4320 l 2491 4282 l 2479 4245 l
 2468 4208 l 2454 4169 l 2440 4131 l 2426 4093 l 2410 4055 l
 2394 4017 l 2376 3979 l 2358 3941 l 2338 3902 l 2317 3862 l
 2294 3821 l 2271 3780 l 2245 3738 l 2218 3694 l 2190 3649 l
 2160 3603 l 2129 3555 l 2095 3506 l 2061 3456 l 2025 3405 l
 1988 3353 l 1950 3300 l 1912 3247 l 1873 3194 l 1834 3142 l
 1796 3091 l 1759 3042 l 1724 2996 l 1691 2952 l 1660 2912 l
 1632 2876 l 1608 2845 l 1587 2818 l 1570 2795 l 1556 2778 l
 1545 2765 l 1538 2755 l 1534 2749 l 1531 2746 l
 1530 2745 l gs col0 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 3870 3735 m 3868 3734 l 3864 3733 l 3857 3729 l 3846 3724 l 3829 3717 l
 3807 3708 l 3780 3696 l 3747 3681 l 3708 3664 l 3665 3645 l
 3616 3623 l 3563 3600 l 3507 3575 l 3448 3549 l 3388 3522 l
 3326 3495 l 3264 3468 l 3202 3440 l 3141 3413 l 3082 3387 l
 3024 3361 l 2968 3336 l 2914 3312 l 2862 3288 l 2813 3266 l
 2766 3245 l 2721 3225 l 2679 3205 l 2639 3187 l 2600 3169 l
 2564 3152 l 2529 3136 l 2497 3121 l 2465 3106 l 2435 3091 l
 2406 3077 l 2378 3064 l 2351 3051 l 2325 3038 l 2289 3019 l
 2254 3002 l 2221 2984 l 2188 2967 l 2156 2950 l 2125 2932 l
 2094 2915 l 2063 2897 l 2032 2879 l 2001 2860 l 1969 2840 l
 1937 2820 l 1905 2800 l 1872 2779 l 1839 2757 l 1807 2736 l
 1776 2715 l 1746 2696 l 1718 2677 l 1694 2660 l 1672 2646 l
 1655 2634 l 1641 2625 l 1631 2618 l 1625 2613 l 1622 2611 l

 1620 2610 l gs col0 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 2610 2340 m 2607 2341 l 2602 2343 l 2592 2347 l 2576 2353 l 2556 2360 l
 2532 2370 l 2504 2380 l 2474 2391 l 2442 2402 l 2411 2413 l
 2381 2424 l 2352 2434 l 2324 2443 l 2298 2451 l 2274 2459 l
 2250 2466 l 2228 2472 l 2207 2477 l 2186 2482 l 2166 2486 l
 2145 2490 l 2124 2494 l 2103 2497 l 2081 2500 l 2059 2502 l
 2035 2505 l 2009 2507 l 1982 2509 l 1953 2511 l 1921 2512 l
 1888 2514 l 1853 2515 l 1817 2516 l 1780 2517 l 1745 2518 l
 1712 2518 l 1684 2519 l 1660 2519 l 1642 2520 l 1630 2520 l
 1623 2520 l
 1620 2520 l gs col0 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 4545 2655 m 4544 2655 l 4542 2656 l 4539 2657 l 4533 2658 l 4525 2661 l
 4514 2664 l 4500 2668 l 4483 2672 l 4462 2678 l 4439 2684 l
 4412 2692 l 4381 2700 l 4348 2708 l 4312 2718 l 4274 2727 l
 4233 2738 l 4190 2748 l 4146 2759 l 4099 2770 l 4051 2782 l
 4002 2793 l 3952 2804 l 3901 2815 l 3849 2825 l 3796 2836 l
 3742 2846 l 3687 2856 l 3631 2865 l 3575 2874 l 3517 2883 l
 3457 2890 l 3397 2898 l 3334 2904 l 3271 2910 l 3205 2915 l
 3139 2920 l 3070 2923 l 3001 2925 l 2931 2927 l 2860 2926 l
 2790 2925 l 2705 2921 l 2624 2916 l 2546 2908 l 2474 2900 l
 2405 2890 l 2342 2879 l 2283 2867 l 2227 2854 l 2176 2840 l
 2127 2826 l 2082 2811 l 2039 2796 l 1999 2780 l 1961 2764 l
 1924 2747 l 1890 2731 l 1858 2714 l 1827 2698 l 1798 2681 l
 1771 2665 l 1746 2650 l 1724 2636 l 1703 2623 l 1685 2611 l
 1669 2600 l 1656 2591 l 1645 2583 l 1636 2577 l 1630 2572 l
 1625 2569 l 1622 2567 l 1621 2566 l
 1620 2565 l gs col0 s gr  [] 0 sd
/Helvetica ff 254.00 scf sf
4410 4590 m
gs 1 -1 sc (FIBER OPTICAL NETWORK) col0 sh gr
/Times-Roman ff 254.00 scf sf
1305 2880 m
gs 1 -1 sc (CONNECTIONS) col0 sh gr
/Times-Roman ff 254.00 scf sf
1305 3195 m
gs 1 -1 sc (TO OTHER) col0 sh gr
/Times-Roman ff 254.00 scf sf
1305 3510 m
gs 1 -1 sc (NETWORKS) col0 sh gr
/Times-Roman ff 254.00 scf sf
1305 3825 m
gs 1 -1 sc (\(INTERNET\)) col0 sh gr
/Times-Roman ff 190.50 scf sf
7650 6750 m
gs 1 -1 sc (SENSOR) col0 sh gr
/Times-Roman ff 190.50 scf sf
7650 7005 m
gs 1 -1 sc (NETWORK) col0 sh gr
/Helvetica ff 254.00 scf sf
3150 9270 m
gs 1 -1 sc (WIFI MESH NETWORK) col0 sh gr
/Helvetica ff 254.00 scf sf
5490 2880 m
gs 1 -1 sc (WIFI AP) col0 sh gr
% here ends figure;
pagefooter
showpage
%%Trailer
end
%EOF
